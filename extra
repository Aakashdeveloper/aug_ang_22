https://code.visualstudio.com/ > Install
https://nodejs.org/en/ > Install
https://git-scm.com/downloads > Install
https://github.com/ > Create Accounts
https://github.com/Aakashdeveloper > Follow

//Extensions
#Chrome
> https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh

#visualstudio
> vscode-icons
> spellCheck
> tabnine
> githistory
> gitlens

///////
NPM
HTML
Css
Bootstrap
Basic javascript/typescript
Fullstack zomato app
Template Form 
DummyApi
Reactive Form
Login app (jwt)
combine login + zomato
Deployment
Angular over node server (MEAN)
Angular over Python server
Heroku
Netlify
AWS
Docker
/////////////////////////////
>>>>>>>>>
Nginx
Jenkins For Angular
>>>>>>>>>>
Angular Material (https://material.angular.io/components/select/examples)
Testing
Github

--------------------
Login With Github
PWA > Angular App Offline
Multilingual
Any Chart

----------No Backend------------
Api (app,login logout) (node)


///////////
Angular> 
Angular is frontend framework that help to build single page applications
using component base structure


////////////////
NPM > Node Package Manager

////////////////////////////////
package.json
> Starting point app
> All the meta data (name,version,description)
> Scripts (start,build,test)
> packages we are using in app

////////////////////////////////
Step To generate package.json
////////////////////////////////
> open the cmd/terminal
> go inside the folder using cmd/terminal
> type npm init
> Answer all questions
> type yes


////////////////////////////////
Step To install package
////////////////////////////////
> open the cmd/terminal  & go inside the folder using cmd/terminal
> npm i packagename


package.json> Starting point app & all packages
node_modules > it contains all the packages
package-lock > dependencies tree
Readme > detail description of the app
.gitignore > it avoid pushing to git
.tsconfig.json > this file help to transpile (convertt into js)
tsconfig.app.json > this file have folder location for actual and transpiled file 
Karams > testing configuration
angualr.json > this is first file to run the app
            > Any common css/js
            > which is first ts & html
.editorconfig > To make same oding standard among developer
.browserslistrc > What all browser support we have

src >>>>>>>>>>>>>>
style.css > common css for the whole app
polyfills > make app compitable for IE
main.ts > this is the first .ts file run
index.html > first .html file load in browser

package.json > angualr.json > main.ts > app.module.ts > app.component.ts
                                ||
                                || compile code into single html
                                \/
                            index.html (load on browser)


////////////////
Step to generate angular app
/////////
# window
@@ One Time step
> open cmd as administrator
> npm i -g @angular/cli
> close cmd

@@ Every Time you need new app
> open the cmd  & go inside the folder using cmd
> ng new appname


# mac/linux
@@ One Time step
> open terminal
> sudo npm i -g @angular/cli
> close terminal

@@ Every Time you need new app
> open the terminal  & go inside the folder using terminal
> ng new appname


////////////
Building Block of angular
/////////
Modules    >>>>> NgModule
> Parent of the app
> All the block have to be declare
Component >>>>> Component
> Html,css, logics
Pipes >>>>> Pipe,PipeTransform
> Filter the data
> Run time data change (manupulation)
Services >>>>> Injeactable
> To Connect with external agent
> Dependency Injection
Routing >>>>> NgModule
> To Navigate between the pages

//////////////////////////
Head > Use to to linking (css,js) as well as add title
Body> All the content user see is in body

Block
> They always start from new line
> Take whole width of screen
> P H1 div
Inline
> They start in same line
> Only take space required
> a, span, img

////////////
inline
styletag
stylesheet

inline>styletag>stylesheet

# inline
{
    color:red;
    font-size:30px
}

# styletag
{
    color:orange;
    height:30px;
    width:30px;
}

# stylesheet
{
    font-size:40px;
    height:80px;
    border-radius:30%
}

{
  color:red;
  font-size:30px;
  height:30px;
  width:30px;
  border-radius:30%
}

////targeting////
Id >>> To target something unique
>>> # symbol
Class >>> to target multiple element with same property
>>> . symbol
TagName >>> Target the tag

https://htmlcolorcodes.com/

solid
dotted
dashed
groove
double

https://imgbb.com/

 "top-offers": "https://i.ibb.co/72tFJDD/top-offers.png",
    "grocery": "https://i.ibb.co/PZvWQpp/grocery.png",
    "mobile": "https://i.ibb.co/Jptfv9B/mobiles.png",
    "fashion": "https://i.ibb.co/NW23z09/fashion.png",
    "electronics": "https://i.ibb.co/JtxLjXB/electronics.png",
    "home": "https://i.ibb.co/3zh4qsF/home.jpg",
    "appliances": "https://i.ibb.co/qFzmCwd/appliances.png",
    "travel": "https://i.ibb.co/X2Tp0Bd/travel.png",
    "toys": "https://i.ibb.co/64kY2Cd/toys.png"


# Bootstrap
> Bs3
> Bs4
> Bs5



/////////BS3/////////
xs < 768px
sm > 768px
md > 992px
lg > 1200px

/////////BS4/////////
col < 576px
sm > 576px;
md > 768px;
lg> 992px;
xl > 1200px


/////////BS5/////////
col < 576px
sm > 576px;
md > 768px;
lg> 992px;
xl > 1200px
xxl > 1400px



API

Page1
# Top strip > https://devflipapi.herokuapp.com/topstrip
# Cloths >  https://devflipapi.herokuapp.com/item/cloths?limit=5
# Mobiles > https://devflipapi.herokuapp.com/item/mobile?limit=5
# Watches > https://devflipapi.herokuapp.com/item/watches?limit=5
# Formals > https://devflipapi.herokuapp.com/item/formals?limit=5

Page 2(Listing)
# List of item on basis of category
# Cloths > https://devflipapi.herokuapp.com/item/cloths
# Mobiles > https://devflipapi.herokuapp.com/item/mobile
# Filter on Basis of Cost
> https://devflipapi.herokuapp.com/filter/price/bags?lcost=50&hcost=500
# Filter on Basis of StarRating
> https://devflipapi.herokuapp.com/filter/rating/cloths/4

Page3 (Details)
> https://devflipapi.herokuapp.com/item/cloths?itemId=12



///// Data Binding ////
# One Way
> Data Binding {{}}
> Property Binding []
> Event Binding ()
# Two Way [()]


//////////
Params
> What we pass after / in url
> It is complusory to define
> Need to pass small data
QueryParams
> What we pass after ? in url
> No Need to define
> We can pass multiple query


www.abc.com/cloths?color=red&type=baby

////Concat/////
var a = 10
var b = "my age is "+a
"my age is 10"

var a = 10;
var b = `my age is ${a}`


var a = [6,5,7,9,3,5,7,2,1]
a.filter((data) => {return data>5})
[6, 7, 9, 7]

var a = ["Delhi","Mumbai","Indore","Pune"]
a.indexOf('Delhi')
0
a.indexOf('Indore')
2
a.indexOf('London')
-1
a.indexOf('Paris')
-1

parent to child > @input
child to parent > @Output

ng-pristine ng-untouched ng-valid
ng-dirty    ng-touched   ng-invalid

///dummy api
npx json-server --watch employee.json --port 8700


/////////////
******GetAllUser*****/
(GET)> https://developerjwt.herokuapp.com/api/auth/users

/******Register*****/
(POST)> https://developerjwt.herokuapp.com/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","phone":343432,role?":"user"}

/******Login*****/
(POST) => https://developerjwt.herokuapp.com/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => https://developerjwt.herokuapp.com/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}

///dummy api


docker build . -t flipapp
docker run -p 8700:4200 flipapp